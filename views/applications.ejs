<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Applications - JobLink</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #4CAF50;
            --secondary-color: #2196F3;
            --accent-color: #FFC107;
            --danger-color: #dc3545;
            --success-color: #28a745;
            --warning-color: #ffc107;
            --info-color: #17a2b8;
            --text-primary: #333333;
            --text-secondary: #666666;
            --bg-light: #f8f9fa;
            --bg-white: #ffffff;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--bg-light);
            color: var(--text-primary);
            line-height: 1.6;
        }

        .dashboard-container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .page-header {
            background-color: var(--bg-white);
            padding: 1.5rem 2rem;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            margin-bottom: 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .page-title {
            font-size: 1.8rem;
            font-weight: 600;
            color: var(--text-primary);
            margin: 0;
        }

        .back-button {
            text-decoration: none;
            color: var(--secondary-color);
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .back-button:hover {
            color: #1976D2;
        }

        .application-card {
            background: var(--bg-white);
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
            border: 1px solid #eee;
        }

        .application-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .application-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1rem;
        }

        .job-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--text-primary);
            margin: 0;
        }

        .company-info {
            color: var(--text-secondary);
            font-size: 0.9rem;
            margin-top: 0.5rem;
        }

        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .status-Pending { background-color: #fff3cd; color: #856404; }
        .status-Reviewed { background-color: #cce5ff; color: #004085; }
        .status-Shortlisted { background-color: #d4edda; color: #155724; }
        .status-Interview { background-color: #e2e3ff; color: #383d41; }
        .status-Offer { background-color: #d1e7dd; color: #0f5132; }
        .status-Rejected { background-color: #f8d7da; color: #721c24; }
        .status-Withdrawn { background-color: #e2e3e5; color: #383d41; }

        .application-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin: 1rem 0;
            padding: 1rem 0;
            border-top: 1px solid #eee;
            border-bottom: 1px solid #eee;
        }

        .detail-item {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .detail-label {
            font-size: 0.8rem;
            color: var(--text-secondary);
            font-weight: 500;
        }

        .detail-value {
            font-size: 0.9rem;
            color: var(--text-primary);
        }

        .application-actions {
            display: flex;
            gap: 1rem;
            margin-top: 1rem;
        }

        .action-button {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 5px;
            font-size: 0.9rem;
            font-weight: 500;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
        }

        .edit-button {
            background-color: var(--secondary-color);
            color: white;
        }

        .edit-button:hover {
            background-color: #1976D2;
        }

        .notes-button {
            background-color: var(--accent-color);
            color: var(--text-primary);
        }

        .notes-button:hover {
            background-color: #ffc107;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            z-index: 1000;
        }

        .modal-content {
            background-color: var(--bg-white);
            margin: 10% auto;
            padding: 2rem;
            border-radius: 10px;
            max-width: 500px;
            position: relative;
        }

        .close-modal {
            position: absolute;
            right: 1rem;
            top: 1rem;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--text-secondary);
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            color: var(--text-primary);
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 0.9rem;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--secondary-color);
        }

        .no-applications {
            text-align: center;
            padding: 3rem;
            background: var(--bg-white);
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .no-applications h2 {
            color: var(--text-primary);
            font-weight: 600;
            margin-bottom: 1rem;
        }

        .no-applications p {
            color: var(--text-secondary);
            max-width: 400px;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <div class="page-header">
            <h1 class="page-title">My Applications</h1>
            <a href="/dashboard" class="back-button">
                <i class="fas fa-arrow-left"></i> Back to Dashboard
            </a>
        </div>

        <% if (applications && applications.length > 0) { %>
            <% applications.forEach(application => { %>
                <div class="application-card" data-application-id="<%= application._id %>">
                    <div class="application-header">
                        <div>
                            <h2 class="job-title"><%= application.jobTitle %></h2>
                            <div class="company-info">
                                <i class="fas fa-building"></i> <%= application.company %> â€¢ 
                                <i class="fas fa-location-dot"></i> <%= application.location %>
                            </div>
                        </div>
                        <span class="status-badge status-<%= application.status.replace(/\s+/g, '') %>">
                            <%= application.status %>
                        </span>
                    </div>

                    <div class="application-details">
                        <div class="detail-item">
                            <span class="detail-label">Applied Date</span>
                            <span class="detail-value">
                                <%= new Date(application.appliedDate).toLocaleDateString('en-US', {
                                    year: 'numeric',
                                    month: 'short',
                                    day: 'numeric'
                                }) %>
                            </span>
                        </div>
                        <% if (application.salary) { %>
                            <div class="detail-item">
                                <span class="detail-label">Salary</span>
                                <span class="detail-value"><%= application.salary %></span>
                            </div>
                        <% } %>
                        <% if (application.interviewDate) { %>
                            <div class="detail-item">
                                <span class="detail-label">Interview Date</span>
                                <span class="detail-value">
                                    <%= new Date(application.interviewDate).toLocaleDateString('en-US', {
                                        year: 'numeric',
                                        month: 'short',
                                        day: 'numeric'
                                    }) %>
                                </span>
                            </div>
                        <% } %>
                    </div>

                    <% if (application.nextSteps) { %>
                        <div class="detail-item">
                            <span class="detail-label">Next Steps</span>
                            <span class="detail-value"><%= application.nextSteps %></span>
                        </div>
                    <% } %>

                    <div class="application-actions">
                        <button class="action-button edit-button" onclick="openStatusModal('<%= application._id %>')">
                            <i class="fas fa-edit"></i> Update Status
                        </button>
                        <button class="action-button notes-button" onclick="openNotesModal('<%= application._id %>')">
                            <i class="fas fa-sticky-note"></i> Add Notes
                        </button>
                    </div>
                </div>
            <% }); %>
        <% } else { %>
            <div class="no-applications">
                <h2>No Applications Yet</h2>
                <p>Start applying to jobs and track your applications here.</p>
            </div>
        <% } %>
    </div>

    <!-- Status Update Modal -->
    <div id="statusModal" class="modal">
        <div class="modal-content">
            <span class="close-modal" onclick="closeStatusModal()">&times;</span>
            <h2>Update Application Status</h2>
            <form id="statusForm">
                <div class="form-group">
                    <label class="form-label">Status</label>
                    <select class="form-control" id="statusSelect">
                        <option value="Pending">Pending</option>
                        <option value="Reviewed">Reviewed</option>
                        <option value="Shortlisted">Shortlisted</option>
                        <option value="Interview Scheduled">Interview Scheduled</option>
                        <option value="Offer Made">Offer Made</option>
                        <option value="Rejected">Rejected</option>
                        <option value="Withdrawn">Withdrawn</option>
                    </select>
                </div>
                <div class="form-group">
                    <label class="form-label">Interview Date (if applicable)</label>
                    <input type="datetime-local" class="form-control" id="interviewDate">
                </div>
                <div class="form-group">
                    <label class="form-label">Next Steps</label>
                    <textarea class="form-control" id="nextSteps" rows="3"></textarea>
                </div>
                <button type="submit" class="action-button edit-button">Update</button>
            </form>
        </div>
    </div>

    <!-- Notes Modal -->
    <div id="notesModal" class="modal">
        <div class="modal-content">
            <span class="close-modal" onclick="closeNotesModal()">&times;</span>
            <h2>Application Notes</h2>
            <form id="notesForm">
                <div class="form-group">
                    <label class="form-label">Notes</label>
                    <textarea class="form-control" id="notes" rows="5"></textarea>
                </div>
                <button type="submit" class="action-button notes-button">Save Notes</button>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentApplicationId = null;

        function openStatusModal(applicationId) {
            currentApplicationId = applicationId;
            document.getElementById('statusModal').style.display = 'block';
        }

        function closeStatusModal() {
            document.getElementById('statusModal').style.display = 'none';
            currentApplicationId = null;
        }

        function openNotesModal(applicationId) {
            currentApplicationId = applicationId;
            document.getElementById('notesModal').style.display = 'block';
        }

        function closeNotesModal() {
            document.getElementById('notesModal').style.display = 'none';
            currentApplicationId = null;
        }

        document.getElementById('statusForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            if (!currentApplicationId) return;

            try {
                const status = document.getElementById('statusSelect').value;
                const interviewDate = document.getElementById('interviewDate').value;
                const nextSteps = document.getElementById('nextSteps').value;

                // Update status
                await fetch(`/dashboard/applications/${currentApplicationId}/status`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ status })
                });

                // Update next steps and interview date
                await fetch(`/dashboard/applications/${currentApplicationId}/next-steps`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ nextSteps, interviewDate })
                });

                location.reload();
            } catch (error) {
                console.error('Error updating application:', error);
            }
        });

        document.getElementById('notesForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            if (!currentApplicationId) return;

            try {
                const notes = document.getElementById('notes').value;
                await fetch(`/dashboard/applications/${currentApplicationId}/notes`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ notes })
                });

                location.reload();
            } catch (error) {
                console.error('Error updating notes:', error);
            }
        });

        // Close modals when clicking outside
        window.onclick = function(event) {
            if (event.target.className === 'modal') {
                event.target.style.display = 'none';
                currentApplicationId = null;
            }
        }
    </script>
</body>
</html> 